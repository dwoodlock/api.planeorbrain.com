// Generated by Elfenben v1.0.14
const express = require("express");
const bodyParser = require("body-parser");
const cors = require("cors");
const AWS = require("aws-sdk");
const jo = require("jpeg-autorotate");
const multer = require("multer");
const s3ToStudentCode = (function(accessKeyId,secretAccessKey) {
    return new AWS.S3({
			accessKeyId,
			secretAccessKey,
			region: "us-east-1"});
})("AKIAJYUDOK5G26RRCJJA","eXQ2hWLubY/p2wzkWEXpwf342Meoo5+tX8fefUHi");
const studentCodeBucket = "www.gegirlstech.com";
const app = express();
const port = (process.env.PORT || 9000);
((port === 9000) ?
    app.use(cors()) :
    app.use(cors({origin: "http://www.gegirlstech.com"})));
app.use(bodyParser.json({limit: '10mb'}));
app.use(bodyParser.urlencoded({ extended: false, limit: '10mb' }));
const saveCodeOptions = function(body) {
    return (function(pcNumber,code,month) {
        return (function(key) {
            return {	Bucket: studentCodeBucket,
				Key: key,
				Body: code};
        })(["classes/",month,"/studentCode/app",pcNumber,".js"].join(''));
    })((body).pcNumber,(body).code,(body).month);
};
const promisifiedPutObject_ = function(options) {
    return new Promise(function(resolve,reject) {
        return s3ToStudentCode.putObject(options,function(err,data) {
            return (function() {
                console.log(err,data);
                return (err ?
                    reject(err) :
                    resolve(data));
            })();
        });
    });
};
const saveCodeHandler_ = function(body) {
    return promisifiedPutObject_(saveCodeOptions(body));
};
const createAppHandler = function(handlerFn) {
    return function(req,res) {
        return ((handlerFn((req).body)).then(function(data) {
            return (res.status(200)).send({status:200, data});
        })).catch(function(err) {
            return (res.status(500)).send({status: 500, message: err, type:'internal'});
        });
    };
};
const uploadpicOptions = function(body) {
    return (function(month,pcNumber,filetype,regex) {
        return (function(Key,originalBuffer) {
            return { Bucket: studentCodeBucket, 
				Key,
				ContentType: filetype, 
				CacheControl: "no-cache",
				Body: originalBuffer};
        })(["classes/",month,"/studentPics/studentPic",pcNumber].join(''),new Buffer(body.data_uri.replace(regex,""),"base64"));
    })((body).month,(body).pcNumber,(body).filetype,new RegExp("^data:image\\/\\w+;base64,"));
};
const uploadpicHandler_ = function(body) {
    return new Promise(function(resolve,reject) {
        return (function(options) {
            return jo.rotate((options).Body,{},function(error,buffer,orientation) {
                return (function(bufferToPut) {
                    return (function(updatedOptions) {
                        return ((promisifiedPutObject_(options)).then(function(data) {
                            return resolve(data);
                        })).catch(function(err) {
                            return reject(err);
                        });
                    })(Object.assign,{},options,{Body: bufferToPut});
                })((error ?
                    (options).Body :
                    buffer));
            });
        })(uploadpicOptions(body));
    });
};
const main_ = function() {
    return (function() {
        app.post("/savecode",createAppHandler(saveCodeHandler_));
        app.post("/uploadpic",(multer()).single('file'),createAppHandler(uploadpicHandler_));
        return app.listen(port,function() {
            return console.log("I am listening on port ",port,"!");
        });
    })();
};
main_();
